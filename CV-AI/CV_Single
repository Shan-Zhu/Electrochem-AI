# 功能预期：一个CV的txt文件，直接扔进程序，自动计算出“电压窗口，圈数，Q充，Q放”
import numpy as np
import pandas as pd
import sklearn as sk
import os
import csv
from scipy import integrate
import matplotlib
import matplotlib.pyplot as plt

# input data
data=pd.read_csv('EISML/CVdata/CVdata_csv/5mv.csv',sep=';')
I_mA=data['<I>/mA'][:,np.newaxis] #电流是mA
E_V=data['Ewe/V'][:,np.newaxis]

#画出所有CV
def CV_plot_all():
    fig, ax = plt.subplots()
    ax.plot(E_V,I_mA)
    plt.show()

#voltage window
def Voltage_window():
    Voltage_window=np.max(E_V)-np.min(E_V) #计算电压窗口
    return round(Voltage_window,3) #打印电压窗口，并保留3位小数

#圈数和正拐点
def Turnpoint():
    Turnpoint_array=[]
    for i_po in range (len(I_mA)-1):
        if I_mA[i_po]>=0.0 and I_mA[i_po+1]<0.0: #正拐点
            aa=i_po
    for i_ne in range (len(I_mA)-1):
        if I_mA[i_ne]<=0.0 and I_mA[i_ne+1]>0.0:
            bb=i_ne
    return aa,bb

i_po,i_ne=Turnpoint() #负半圈的起始点和终点
I_ne=np.split(I_mA,[i_po,i_ne])
E_ne=np.split(E_V,[i_po,i_ne])

Voltage_window=Voltage_window() #电压窗口
print ('Voltage_window:', Voltage_window,'V')

Q_Discharge=np.trapz(I_ne[1].T,E_ne[1].T)
print ("Q_Discharge:", round(Q_Discharge[0],3), "mC")

Scan_rate=5  #mV/s
Mass=0.4      #mg

Capacitance=Q_Discharge[0]*1000/Scan_rate/Mass/Voltage_window
print ('Capacitance:', round(Capacitance,2),'F/g')
